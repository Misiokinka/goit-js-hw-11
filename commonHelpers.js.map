{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const containerLoader = document.getElementById('container-loader');\n  removeLoader(containerLoader);\n\n  const formSearching = document.getElementById('formSearching');\n  const inputSearch = document.getElementById('inputSearch');\n  const gallery = document.getElementById('gallery');\n\n  const apiKey = '42167626-5dd4d1124df4d491f669cdb42';\n\n  formSearching.addEventListener('submit', function (e) {\n    e.preventDefault();\n\n    addLoader(containerLoader);\n\n    const searchResult = inputSearch.value.trim();\n    if (!searchResult) {\n      iziToast.error({\n        title: 'Error',\n        message: 'The field is not allowed to be empty ',\n        position: 'topRight',\n      });\n      removeLoader(containerLoader);\n      return;\n    }\n\n    const apiUrl = 'https://pixabay.com/api/';\n    const requestData = {\n      key: apiKey,\n      q: searchResult,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: true,\n      per_page: 9,\n    };\n\n    fetch(`${apiUrl}?${new URLSearchParams(requestData)}`)\n      .then(response => {\n        if (!response.ok) {\n          gallery.innerHTML = '';\n          return iziToast.error({\n            title: 'Error',\n            message: 'Something went wrong. Please try again later.',\n            position: 'topRight',\n          });\n        }\n        return response.json();\n      })\n      .then(data => {\n        if (data.hits.length === 0) {\n          iziToast.error({\n            title: 'Error',\n            message:\n              'Sorry, there are no images matching your search query. Please try again!',\n            position: 'topRight',\n          });\n          gallery.innerHTML = '';\n          return;\n        }\n        renderImages(data.hits);\n      })\n      .catch(() => {\n        iziToast.error({\n          title: 'Error',\n          message: 'Something went wrong. Please try again later.',\n          position: 'topRight',\n        });\n      })\n      .finally(() => {\n        removeLoader(containerLoader);\n      });\n  });\n\n  function removeLoader(containerLoader) {\n    if (containerLoader) {\n      containerLoader.style.display = 'none';\n    }\n  }\n\n  function addLoader(containerLoader) {\n    if (containerLoader) {\n      containerLoader.style.display = 'block';\n    }\n  }\n  function renderImages(images) {\n    const newListImage = images.map(\n      image =>\n        `\n        <div class=\"gallery-item\">\n      <a href=\"${image.largeImageURL}\" data-lightbox=\"gallery\" data-title=\"Likes: ${image.likes}, Views: ${image.views}, Comments: ${image.comments}, Downloads: ${image.downloads}\">\n          <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" data-src=\"${image.largeImageURL}\" data-caption=\"Likes: ${image.likes}, Views: ${image.views}, Comments: ${image.comments}, Downloads: ${image.downloads}\">\n        </a>\n        <div class=\"image-block\">\n      <div class=\"block-item\">\n        <p class=\"block-label\">Likes:</p>\n        <p class=\"block-value\">${image.likes}</p>\n      </div>\n      <div class=\"block-item\">\n        <p class=\"block-label\">Views:</p>\n        <p class=\"block-value\">${image.views}</p>\n      </div>\n      <div class=\"block-item\">\n        <p class=\"block-label\">Comments:</p>\n        <p class=\"block-value\">${image.comments}</p>\n      </div>\n      <div class=\"block-item\">\n        <p class=\"block-label\">Downloads:</p>\n        <p class=\"block-value\">${image.downloads}</p>\n      </div>\n    </div>\n    </div>\n      `\n    );\n\n    gallery.innerHTML = newListImage.join('');\n\n    const lightbox = new SimpleLightbox('.gallery a', {\n      captionsData: 'alt',\n      captionDelay: 250,\n    });\n    lightbox.refresh();\n  }\n});\n"],"names":["containerLoader","removeLoader","formSearching","inputSearch","gallery","apiKey","e","addLoader","searchResult","iziToast","apiUrl","requestData","response","data","renderImages","images","newListImage","image","SimpleLightbox"],"mappings":"6vBAKA,SAAS,iBAAiB,mBAAoB,UAAY,CACxD,MAAMA,EAAkB,SAAS,eAAe,kBAAkB,EAClEC,EAAaD,CAAe,EAE5B,MAAME,EAAgB,SAAS,eAAe,eAAe,EACvDC,EAAc,SAAS,eAAe,aAAa,EACnDC,EAAU,SAAS,eAAe,SAAS,EAE3CC,EAAS,qCAEfH,EAAc,iBAAiB,SAAU,SAAUI,EAAG,CACpDA,EAAE,eAAc,EAEhBC,EAAUP,CAAe,EAEzB,MAAMQ,EAAeL,EAAY,MAAM,KAAI,EAC3C,GAAI,CAACK,EAAc,CACjBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,wCACT,SAAU,UAClB,CAAO,EACDR,EAAaD,CAAe,EAC5B,MACD,CAED,MAAMU,EAAS,2BACTC,EAAc,CAClB,IAAKN,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,CAChB,EAEI,MAAM,GAAGE,KAAU,IAAI,gBAAgBC,CAAW,GAAG,EAClD,KAAKC,GACCA,EAAS,GAQPA,EAAS,QAPdR,EAAQ,UAAY,GACbK,EAAS,MAAM,CACpB,MAAO,QACP,QAAS,gDACT,SAAU,UACtB,CAAW,EAGJ,EACA,KAAKI,GAAQ,CACZ,GAAIA,EAAK,KAAK,SAAW,EAAG,CAC1BJ,EAAS,MAAM,CACb,MAAO,QACP,QACE,2EACF,SAAU,UACtB,CAAW,EACDL,EAAQ,UAAY,GACpB,MACD,CACDU,EAAaD,EAAK,IAAI,CAC9B,CAAO,EACA,MAAM,IAAM,CACXJ,EAAS,MAAM,CACb,MAAO,QACP,QAAS,gDACT,SAAU,UACpB,CAAS,CACT,CAAO,EACA,QAAQ,IAAM,CACbR,EAAaD,CAAe,CACpC,CAAO,CACP,CAAG,EAED,SAASC,EAAaD,EAAiB,CACjCA,IACFA,EAAgB,MAAM,QAAU,OAEnC,CAED,SAASO,EAAUP,EAAiB,CAC9BA,IACFA,EAAgB,MAAM,QAAU,QAEnC,CACD,SAASc,EAAaC,EAAQ,CAC5B,MAAMC,EAAeD,EAAO,IAC1BE,GACE;AAAA;AAAA,iBAESA,EAAM,6DAA6DA,EAAM,iBAAiBA,EAAM,oBAAoBA,EAAM,wBAAwBA,EAAM;AAAA,sBACnJA,EAAM,sBAAsBA,EAAM,mBAAmBA,EAAM,uCAAuCA,EAAM,iBAAiBA,EAAM,oBAAoBA,EAAM,wBAAwBA,EAAM;AAAA;AAAA;AAAA;AAAA;AAAA,iCAK5KA,EAAM;AAAA;AAAA;AAAA;AAAA,iCAINA,EAAM;AAAA;AAAA;AAAA;AAAA,iCAINA,EAAM;AAAA;AAAA;AAAA;AAAA,iCAINA,EAAM;AAAA;AAAA;AAAA;AAAA,OAKvC,EAEIb,EAAQ,UAAYY,EAAa,KAAK,EAAE,EAEvB,IAAIE,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GACpB,CAAK,EACQ,QAAO,CACjB,CACH,CAAC"}